import 'package:flutter_secure_storage/flutter_secure_storage.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:team_aid/core/constants.dart';
import 'package:team_aid/core/entities/user.model.dart';

/// The GlobalFunctions class has a method to save user session data to SharedPreferences.
class GlobalFunctions {
  /// The function saves user session data to shared preferences.
  ///
  /// Args:
  ///   user (UserModel): A required UserModel object that contains information about the user, such as
  /// their first name, last name, email, phone number, address, and role.
  ///   token (String): The token is a string that represents an authentication token that is used to
  /// authenticate the user's session. It is usually generated by the server and sent to the client upon
  /// successful login or authentication. The token is then stored on the client-side and sent with each
  /// subsequent request to the server to authenticate the user
  Future<void> saveUserSession({
    required UserModel user,
    required String token,
  }) async {
    final prefs = await SharedPreferences.getInstance();
    const secureStorage = FlutterSecureStorage();
    await secureStorage.write(key: TAConstants.accessToken, value: token);
    await prefs.setString(TAConstants.firstName, user.firstName);
    await prefs.setString(TAConstants.lastName, user.lastName);
    await prefs.setString(TAConstants.email, user.email);
    await prefs.setString(TAConstants.phoneNumber, user.phoneNumber);
    await prefs.setString(TAConstants.address, user.address);
    await prefs.setString(TAConstants.role, user.role.name);
  }
}
